#! /usr/bin/env python
# -*- coding: utf-8 -*-

import subprocess
import sys
import os

def welcome_print(msg):
    print('*' * 70)
    print('   <<< ' + msg + ' >>>')
    print('*' * 70)

welcome_print('Get your KVM virtual machine IP address, powered by blueyi')


# command to run and get the output
def run_cmd_reout(cmd, args=' ', con = False, isprint = True, jumperr = False):
    tcall_cmd = cmd + ' ' + args
    p = subprocess.Popen(tcall_cmd, shell=True, stdout=subprocess.PIPE, executable='/bin/bash')
    toutput = p.communicate()[0]
    if p.returncode != 0 and not jumperr:
        print('<<< ' + tcall_cmd + ' >>> run failed!')
        if not con :
            sys.exit(1)
    if isprint:
        print(toutput)
    return toutput

# path
# script path
curr_path = os.path.split(os.path.realpath(__file__))[0]
# user path
user_path = os.path.expanduser('~')


hostname = ''
if len(sys.argv) != 2:
    hostname = raw_input('Enter your unique hostname:\n')
else:
    hostname = sys.argv[1]


# nmap ping all ip
nmap_cmd = 'nmap -sP 192.168.1.0/24'
run_cmd_reout(nmap_cmd, isprint=False)
get_mac_cmd = "virsh dumpxml " + hostname + " | grep 'mac address' | cut -c 21-37"
hostMac = run_cmd_reout(get_mac_cmd, isprint=False).strip()
arp_ip_cmd = "arp -an | grep '"  + hostMac + "'"
arp_ip = run_cmd_reout(arp_ip_cmd, isprint=False)
host_ip = arp_ip[arp_ip.find('(') + 1 : arp_ip.find(')')]


# hostname info
print('------' + hostname + ' infomation------')
host_info_cmd = 'virsh dominfo ' + hostname
run_cmd_reout(host_info_cmd)
print('MAC address: ' + hostMac)

welcome_print(hostname + ' IP: ' + host_ip + ' SSH port: 22' +  ' enjoy it!')

